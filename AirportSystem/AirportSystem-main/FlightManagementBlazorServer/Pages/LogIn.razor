@page "/"
@inject UserService _userService;
@inject NavigationManager _navigationManager;
<h3>Log In</h3>

<div class="userFields">
    <label for="userName">Username</label>
    <input type="text" @bind="@username" class="form-control" />


    <label for="userPasword">Password</label>
    <input type="text" @bind="@password" class="form-control" />
</div>
 &nbsp;
<div>
    <button type="submit" class="btn btn-success" @onclick="CheckLogInData">
        <span class="oi oi-account-login"></span>
        Log In
    </button>
</div>

<NotificationDialog @ref="NotificationDialog" Description="@StringValidationError" NotificationType="Error"></NotificationDialog>

@code
{
    public string username { get; set; }
    public string password { get; set; }
    public User User { get; set; }
    public NotificationDialog NotificationDialog { get; set; }
    public string StringValidationError { get; set; }

    protected override async Task OnInitializedAsync()
    {
        username = "";
        password = "";
        User = new User();
        StringValidationError = "";
    }

    private async void CheckLogInData()
    {
        try
        {
            User = await _userService.GetUserAsync(username);
        }
        catch (System.Exception)
        {

        }

        if (User.Username != username)
        {
            StringValidationError = "There is no account with entered Username";
            StateHasChanged();
            NotificationDialog.Show();
        }

        else if (User.Password != password)
        {
            StringValidationError = "Wrong Password, please try again";
            StateHasChanged();
            NotificationDialog.Show();
        }
        else
        {
            _navigationManager.NavigateTo($"/ProfilePage/{User.Id}");
        }
    }
}